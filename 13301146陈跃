package com.javaee.server;

import java.io.*;  
import java.util.*;  
import java.net.*;  
  
public class recieveServer {  
    final int RECEIVE_PORT = 3333;
  
    public recieveServer() {  
        ServerSocket rServer = null;
        Socket request = null;
        Thread receiveThread = null;  
        try {  
            rServer = new ServerSocket(RECEIVE_PORT);
            System.out.println("Welcome to the server!");  
            System.out.println(new Date());  
            System.out.println("The server is ready!");  
            System.out.println("Port: " + RECEIVE_PORT);  
            while (true) {
                request = rServer.accept(); 
                receiveThread = new serverThread(request); 
                receiveThread.start(); 
            }  
        } catch (IOException e) {  
            System.out.println(e.getMessage());  
        }  
    }  
  
    public static void main(String args[]) {  
        new recieveServer();  
    } // end of main  
  
} 
  
class serverThread extends Thread {  
  
    Socket clientRequest;
    BufferedReader input;
    PrintWriter output; 
    String message = null;
    String remessage = null;
  
    public serverThread(Socket s) { 
        this.clientRequest = s;
        InputStreamReader reader;  
        OutputStreamWriter writer;  
        try {  
            reader = new InputStreamReader(clientRequest.getInputStream());  
            writer = new OutputStreamWriter(clientRequest.getOutputStream());  
            input = new BufferedReader(reader);  
            output = new PrintWriter(writer, true);  
        } catch (IOException e) {  
            System.out.println(e.getMessage());  
        }  
        String message = null;
        String remessage = null;
        
        try {
			message = input.readLine();
		} catch (IOException e) {
			// TODO Auto-generated catch block
			e.printStackTrace();
		}
            
        	char[] charArray = message.toCharArray(); 
        	remessage = "";
            for (int i=charArray.length-1; i>=0; i--){ 
            	remessage += charArray[i]; 
            }
            output.println(remessage);
        
    }  
  
    public void run() { 
        String command = null; 
        String str = null;  
        boolean done = false;  
        
  
        while (!done) {  
            try {  
                str = input.readLine();
            } catch (IOException e) {  
                System.out.println(e.getMessage());  
            }
            
            command = str.trim().toUpperCase();  
    		
    		
    		char[] charArray = str.toCharArray(); 
    		remessage = "";
    		for (int i=charArray.length-1; i>=0; i--){ 
    			remessage += charArray[i]; 
    		}
    		output.println(remessage);
        }// end of while 
        try {  
            clientRequest.close(); 
        } catch (IOException e) {  
            System.out.println(e.getMessage());  
        }  
        command = null;  
    }// end of run  
}  
